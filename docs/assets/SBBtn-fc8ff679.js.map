{"version":3,"file":"SBBtn-fc8ff679.js","sources":["../../src/components/SBBtn/SBBtn.vue"],"sourcesContent":["<template>\n  <button\n    class=\"font-semibold transition-all disabled:cursor-not-allowed\"\n    :class=\"[buttonSizingClasses, buttonTypeClasses]\"\n    :type=\"type\"\n  >\n    <div class=\"relative flex items-center justify-center\">\n      <div\n        data-testid=\"buttonContentWrapper\"\n        class=\"flex items-center justify-center\"\n        :class=\"[\n          buttonElementsContainerSizingClasses,\n          { 'opacity-0': loading }\n        ]\"\n      >\n        <slot v-if=\"position === 'left'\" />\n        <Icon\n          v-if=\"icon\"\n          data-testid=\"buttonIcon\"\n          :icon=\"icon\"\n          :class=\"[iconSizingClasses, { 'opacity-0': loading }]\"\n        />\n        <slot v-if=\"position === 'right'\" />\n      </div>\n      <SBLoadingSpinner\n        data-testid=\"loadingSpinner\"\n        class=\"absolute\"\n        v-if=\"loading\"\n        :size=\"size\"\n      />\n    </div>\n  </button>\n</template>\n<script setup lang=\"ts\">\nimport SBLoadingSpinner from '../SBLoadingSpinner';\nimport { computed } from 'vue';\nimport { Icon } from '@iconify/vue';\nimport Props from './SBBtn.props';\n\nconst props = withDefaults(defineProps<Props>(), {\n  size: 'md',\n  uiType: 'primary',\n  position: 'left',\n  loading: false,\n  type: 'button'\n});\n\nconst buttonSizingClasses = computed(() => {\n  switch (props.size) {\n    case 'xs':\n      return 'text-xs rounded-md min-h-[32px] px-2';\n    case 'sm':\n      return 'text-sm rounded-lg min-h-[48px] px-4';\n    case 'lg':\n      return 'text-base rounded-xl min-h-[56px] px-8';\n    case 'xl':\n      return 'text-lg rounded-2xl min-h-[60px] px-8';\n    default:\n      return 'text-base rounded-xl min-h-[52px] px-6';\n  }\n});\n\nconst buttonElementsContainerSizingClasses = computed(() => {\n  switch (props.size) {\n    case 'xs':\n      return 'gap-1';\n    case 'lg':\n    case 'xl':\n      return 'gap-4';\n    default:\n      return 'gap-3';\n  }\n});\n\nconst buttonTypeClasses = computed(() => {\n  switch (props.uiType) {\n    case 'secondary':\n      return 'border-2 border-primary text-primary hover:text-primary-default_strong hover:border-primary-default_strong focus:border-white focus:outline-8 focus:outline focus:outline-primary-bg_strong disabled:opacity-50 active:text-grayscale-header active:border-grayscale-header';\n    case 'subtle':\n      return 'border-2 border-grayscale-line text-primary hover:border-grayscale-placeholder hover:text-primary-default_strong focus:border-white focus:outline-8 focus:outline focus:outline-grayscale-input active:border-grayscale-header active:text-grayscale-header disabled:opacity-50';\n    case 'ghost':\n      return 'text-primary hover:text-primary-default_strong focus:outline-8 focus:outline focus:outline-grayscale-input active:text-grayscale-header disabled:opacity-50';\n    default:\n      return 'text-grayscale-bg bg-primary hover:bg-primary-default_strong focus:outline-8 focus:outline focus:outline-primary-bg_strong disabled:opacity-50 active:bg-grayscale-header';\n  }\n});\n\nconst iconSizingClasses = computed(() => {\n  switch (props.size) {\n    case 'xs':\n    case 'sm':\n      return 'text-[16px]';\n    default:\n      return 'text-[24px]';\n  }\n});\n</script>\n"],"names":["buttonSizingClasses","computed","props","buttonElementsContainerSizingClasses","buttonTypeClasses","iconSizingClasses"],"mappings":"0cA+CMA,EAAsBC,EAAS,IAAM,CACzC,OAAQC,EAAM,KAAM,CAClB,IAAK,KACI,MAAA,uCACT,IAAK,KACI,MAAA,uCACT,IAAK,KACI,MAAA,yCACT,IAAK,KACI,MAAA,wCACT,QACS,MAAA,wCACX,CAAA,CACD,EAEKC,EAAuCF,EAAS,IAAM,CAC1D,OAAQC,EAAM,KAAM,CAClB,IAAK,KACI,MAAA,QACT,IAAK,KACL,IAAK,KACI,MAAA,QACT,QACS,MAAA,OACX,CAAA,CACD,EAEKE,EAAoBH,EAAS,IAAM,CACvC,OAAQC,EAAM,OAAQ,CACpB,IAAK,YACI,MAAA,8QACT,IAAK,SACI,MAAA,kRACT,IAAK,QACI,MAAA,8JACT,QACS,MAAA,2KACX,CAAA,CACD,EAEKG,EAAoBJ,EAAS,IAAM,CACvC,OAAQC,EAAM,KAAM,CAClB,IAAK,KACL,IAAK,KACI,MAAA,cACT,QACS,MAAA,aACX,CAAA,CACD"}