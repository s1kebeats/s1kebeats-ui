{"version":3,"file":"SBConfidentialInput.stories-7458dfe5.js","sources":["../../src/components/SBConfidentialInput/SBConfidentialInput.vue"],"sourcesContent":["<template>\n  <div\n    class=\"flex flex-col\"\n    :class=\"[\n      inputContainerClasses,\n      {\n        'cursor-not-allowed': disabled\n      }\n    ]\"\n    data-testid=\"confidentialInputContainer\"\n  >\n    <div\n      class=\"flex items-center transition-all\"\n      data-testid=\"presentationalInput\"\n      :class=\"[\n        inputPresentationalSizingClasses,\n        inputPresentationalStateClasses,\n        {\n          'opacity-50': disabled,\n          'bg-grayscale-bg outline-grayscale-header outline outline-[2px]':\n            focused,\n          'bg-grayscale-input': !focused\n        }\n      ]\"\n      @focusin=\"focused = true\"\n      @focusout=\"focused = false\"\n    >\n      <button\n        data-testid=\"optionalIconButton\"\n        :disabled=\"disabled\"\n        v-if=\"icon\"\n        @click.prevent=\"callback ? callback() : null\"\n        :class=\"{\n          'cursor-default': !callback,\n          'cursor-not-allowed': disabled\n        }\"\n      >\n        <Icon\n          data-testid=\"optionalIcon\"\n          icon=\"material-symbols:lock\"\n          class=\"transition-all\"\n          :class=\"[\n            inputIconClasses,\n            coloredIconClasses,\n            {\n              '!text-black': focused,\n              'hover:text-black': callback\n            }\n          ]\"\n        />\n      </button>\n      <div\n        class=\"flex grow flex-col items-start justify-center overflow-hidden\"\n      >\n        <span\n          data-testid=\"upperLabel\"\n          v-show=\"value\"\n          class=\"w-full text-sm truncate\"\n          :class=\"inputLabelClasses\"\n          >{{ label }}</span\n        >\n        <input\n          :autocomplete=\"autocomplete\"\n          data-testid=\"confidentialInput\"\n          :type=\"showValue ? 'text' : 'password'\"\n          :name=\"name\"\n          ref=\"confidentialInput\"\n          :placeholder=\"label\"\n          class=\"bg-transparent w-full truncate focus:outline-none text-grayscale-header placeholder:text-grayscale-label placeholder:truncate\"\n          v-model.trim=\"value\"\n          :disabled=\"disabled\"\n          :class=\"{\n            'cursor-not-allowed': disabled\n          }\"\n        />\n      </div>\n\n      <button\n        :class=\"{\n          'w-[19px]': size === 'sm',\n          'w-[22px]': size === 'md' || size === 'lg',\n          'w-[24px]': size === 'xl',\n          'cursor-not-allowed': disabled\n        }\"\n        data-testid=\"toggleValueButton\"\n        @click.prevent=\"toggleValueVisibility\"\n        :disabled=\"disabled\"\n      >\n        <Icon\n          data-testid=\"toggleValueButtonIcon\"\n          :icon=\"\n            showValue\n              ? 'material-symbols:visibility-outline-rounded'\n              : 'material-symbols:visibility-off-outline-rounded'\n          \"\n          class=\"transition-all hover:text-black\"\n          :class=\"[\n            inputIconClasses,\n            coloredIconClasses,\n            {\n              '!text-black': focused,\n              'hover:text-black': callback\n            }\n          ]\"\n        />\n      </button>\n    </div>\n    <span data-testid=\"messageHint\" v-if=\"message\" :class=\"messageClasses\">{{\n      message\n    }}</span>\n  </div>\n</template>\n<script setup lang=\"ts\">\nimport { Icon } from '@iconify/vue';\nimport { computed, ref, watch, watchEffect } from 'vue';\nimport { type SBTextInputProps } from '../SBTextInput';\nconst props = withDefaults(\n  defineProps<Omit<SBTextInputProps, 'type' | 'icon'> & { icon?: boolean }>(),\n  {\n    size: 'md',\n    disabled: false,\n    debounce: false,\n    icon: true,\n    autocomplete: 'off'\n  }\n);\n\nconst emit = defineEmits<{\n  (e: 'update:value', value: string): void;\n}>();\n\nconst value = ref('');\n\nconst confidentialInput = ref<HTMLInputElement | null>(null);\nconst focused = ref(false);\nconst showValue = ref(false);\n\nfunction toggleValueVisibility() {\n  showValue.value = !showValue.value;\n}\n\nconst messageClasses = computed(() => {\n  switch (props.state) {\n    case 'success':\n      return 'text-success-default_strong';\n    case 'error':\n      return 'text-danger-default_strong';\n    default:\n      return 'text-grayscale-header';\n  }\n});\n\nconst inputIconClasses = computed(() => {\n  switch (props.size) {\n    case 'sm':\n      return 'text-[19px]';\n    case 'xl':\n      return 'text-[24px]';\n    default:\n      return 'text-[22px]';\n  }\n});\n\nconst inputContainerClasses = computed(() => {\n  switch (props.size) {\n    case 'sm':\n      return 'text-sm';\n    case 'xl':\n      return 'text-lg gap-2';\n    default:\n      return 'text-base gap-1';\n  }\n});\n\nconst inputLabelClasses = computed(() => {\n  switch (props.state) {\n    case 'success':\n      return 'text-success-default_strong';\n    case 'error':\n      return 'text-danger-default_strong';\n    default:\n      return 'text-grayscale-label';\n  }\n});\n\nconst inputPresentationalSizingClasses = computed(() => {\n  switch (props.size) {\n    case 'sm':\n      return 'rounded-lg min-h-[48px] px-4 gap-3';\n    case 'lg':\n      return 'rounded-xl min-h-[56px] px-8 gap-4';\n    case 'xl':\n      return 'rounded-2xl min-h-[60px] px-8 gap-4';\n    default:\n      return 'rounded-xl min-h-[52px] px-6 gap-3';\n  }\n});\n\nconst inputPresentationalStateClasses = computed(() => {\n  switch (props.state) {\n    case 'success':\n      return '!outline-success outline outline-[2px] !bg-success-bg';\n    case 'error':\n      return '!outline-danger outline outline-[2px] !bg-danger-bg';\n    default:\n      return '';\n  }\n});\n\nconst coloredIconClasses = computed(() => {\n  switch (props.state) {\n    case 'success':\n      return 'text-success-default_strong';\n    case 'error':\n      return 'text-danger-default_strong';\n    default:\n      return 'text-grayscale-label';\n  }\n});\n\nlet timeOut: NodeJS.Timeout;\nwatch(value, () => {\n  if (!props.debounce) {\n    emit('update:value', value.value);\n    return;\n  }\n  if (timeOut) {\n    clearTimeout(timeOut);\n  }\n  timeOut = setTimeout(() => {\n    emit('update:value', value.value);\n  }, 500);\n});\n\nwatchEffect(() => {\n  value.value = props.preset ? props.preset : '';\n});\n</script>\n"],"names":["value","ref","confidentialInput","focused","showValue","toggleValueVisibility","messageClasses","computed","props","inputIconClasses","inputContainerClasses","inputLabelClasses","inputPresentationalSizingClasses","inputPresentationalStateClasses","coloredIconClasses","timeOut","watch","emit","watchEffect"],"mappings":"4qBAmIMA,EAAQC,EAAI,EAAE,EAEdC,EAAoBD,EAA6B,IAAI,EACrDE,EAAUF,EAAI,EAAK,EACnBG,EAAYH,EAAI,EAAK,EAE3B,SAASI,GAAwB,CACrBD,EAAA,MAAQ,CAACA,EAAU,KAC/B,CAEM,MAAAE,EAAiBC,EAAS,IAAM,CACpC,OAAQC,EAAM,MAAO,CACnB,IAAK,UACI,MAAA,8BACT,IAAK,QACI,MAAA,6BACT,QACS,MAAA,uBACX,CAAA,CACD,EAEKC,EAAmBF,EAAS,IAAM,CACtC,OAAQC,EAAM,KAAM,CAClB,IAAK,KACI,MAAA,cACT,IAAK,KACI,MAAA,cACT,QACS,MAAA,aACX,CAAA,CACD,EAEKE,EAAwBH,EAAS,IAAM,CAC3C,OAAQC,EAAM,KAAM,CAClB,IAAK,KACI,MAAA,UACT,IAAK,KACI,MAAA,gBACT,QACS,MAAA,iBACX,CAAA,CACD,EAEKG,EAAoBJ,EAAS,IAAM,CACvC,OAAQC,EAAM,MAAO,CACnB,IAAK,UACI,MAAA,8BACT,IAAK,QACI,MAAA,6BACT,QACS,MAAA,sBACX,CAAA,CACD,EAEKI,EAAmCL,EAAS,IAAM,CACtD,OAAQC,EAAM,KAAM,CAClB,IAAK,KACI,MAAA,qCACT,IAAK,KACI,MAAA,qCACT,IAAK,KACI,MAAA,sCACT,QACS,MAAA,oCACX,CAAA,CACD,EAEKK,EAAkCN,EAAS,IAAM,CACrD,OAAQC,EAAM,MAAO,CACnB,IAAK,UACI,MAAA,wDACT,IAAK,QACI,MAAA,sDACT,QACS,MAAA,EACX,CAAA,CACD,EAEKM,EAAqBP,EAAS,IAAM,CACxC,OAAQC,EAAM,MAAO,CACnB,IAAK,UACI,MAAA,8BACT,IAAK,QACI,MAAA,6BACT,QACS,MAAA,sBACX,CAAA,CACD,EAEG,IAAAO,EACJ,OAAAC,EAAMhB,EAAO,IAAM,CACb,GAAA,CAACQ,EAAM,SAAU,CACdS,EAAA,eAAgBjB,EAAM,KAAK,EAChC,OAEEe,GACF,aAAaA,CAAO,EAEtBA,EAAU,WAAW,IAAM,CACpBE,EAAA,eAAgBjB,EAAM,KAAK,GAC/B,GAAG,CAAA,CACP,EAEDkB,EAAY,IAAM,CAChBlB,EAAM,MAAQQ,EAAM,OAASA,EAAM,OAAS,EAAA,CAC7C;;;;;;;;;;;"}