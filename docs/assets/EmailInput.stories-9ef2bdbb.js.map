{"version":3,"file":"EmailInput.stories-9ef2bdbb.js","sources":["../../node_modules/.pnpm/email-validator@2.0.4/node_modules/email-validator/index.js","../../src/components/EmailInput/EmailInput.vue"],"sourcesContent":["\"use strict\";\r\n\r\nvar tester = /^[-!#$%&'*+\\/0-9=?A-Z^_a-z{|}~](\\.?[-!#$%&'*+\\/0-9=?A-Z^_a-z`{|}~])*@[a-zA-Z0-9](-*\\.?[a-zA-Z0-9])*\\.[a-zA-Z](-?[a-zA-Z0-9])+$/;\r\n// Thanks to:\r\n// http://fightingforalostcause.net/misc/2006/compare-email-regex.php\r\n// http://thedailywtf.com/Articles/Validating_Email_Addresses.aspx\r\n// http://stackoverflow.com/questions/201323/what-is-the-best-regular-expression-for-validating-email-addresses/201378#201378\r\nexports.validate = function(email)\r\n{\r\n\tif (!email)\r\n\t\treturn false;\r\n\t\t\r\n\tif(email.length>254)\r\n\t\treturn false;\r\n\r\n\tvar valid = tester.test(email);\r\n\tif(!valid)\r\n\t\treturn false;\r\n\r\n\t// Further checking of some things regex can't handle\r\n\tvar parts = email.split(\"@\");\r\n\tif(parts[0].length>64)\r\n\t\treturn false;\r\n\r\n\tvar domainParts = parts[1].split(\".\");\r\n\tif(domainParts.some(function(part) { return part.length>63; }))\r\n\t\treturn false;\r\n\r\n\treturn true;\r\n}","<template>\n  <TextInput\n    data-testid=\"textInputComponent\"\n    :size=\"size\"\n    :name=\"name\"\n    label=\"Введите электронную почту\"\n    icon=\"material-symbols:alternate-email-rounded\"\n    :preset=\"preset\"\n    :disabled=\"disabled\"\n    :message=\"message || localMessage\"\n    :state=\"state || localState\"\n    :debounce=\"true\"\n    @update-value=\"updateValue\"\n    type=\"email\"\n  />\n</template>\n<script setup lang=\"ts\">\nimport TextInput from '../TextInput/TextInput.vue';\nimport * as EmailValidator from 'email-validator';\nimport { onMounted, ref } from 'vue';\nimport type TextInputProps from '../TextInput/TextInput.props';\n\nconst emit = defineEmits<{\n  (e: 'updateValue', value: string): void;\n}>();\n\nconst props =\n  defineProps<Omit<TextInputProps, 'label' | 'icon' | 'debounce'>>();\n\nconst localMessage = ref(props.message ? props.message : '');\nconst localState = ref(props.state ? props.state : null);\n\n// don't forget to reset prop-provided message and state after emit (in form component)\n\nfunction updateValue(emitted: string) {\n  if (!emitted) {\n    localMessage.value = '';\n    localState.value = null;\n    emit('updateValue', emitted);\n    return;\n  }\n  if (EmailValidator.validate(emitted)) {\n    localMessage.value = '';\n    localState.value = 'success';\n    emit('updateValue', emitted);\n    return;\n  }\n  localMessage.value = 'Введите настоящую электронную почту';\n  localState.value = 'error';\n}\n\nonMounted(() => {\n  if (props.preset) {\n    updateValue(props.preset);\n  }\n});\n</script>\n"],"names":["tester","validate","email","valid","parts","domainParts","part","localMessage","ref","props","localState","updateValue","emitted","emit","EmailValidator.validate","onMounted"],"mappings":"+JAEA,IAAIA,EAAS,iIAKGC,EAAG,SAASC,EAC5B,CAIC,GAHI,CAACA,GAGFA,EAAM,OAAO,IACf,MAAO,GAER,IAAIC,EAAQH,EAAO,KAAKE,CAAK,EAC7B,GAAG,CAACC,EACH,MAAO,GAGR,IAAIC,EAAQF,EAAM,MAAM,GAAG,EAC3B,GAAGE,EAAM,CAAC,EAAE,OAAO,GAClB,MAAO,GAER,IAAIC,EAAcD,EAAM,CAAC,EAAE,MAAM,GAAG,EACpC,MAAG,CAAAC,EAAY,KAAK,SAASC,EAAM,CAAE,OAAOA,EAAK,OAAO,GAAK,CAI9D,kMCAMC,EAAeC,EAAIC,EAAM,QAAUA,EAAM,QAAU,EAAE,EACrDC,EAAaF,EAAIC,EAAM,MAAQA,EAAM,MAAQ,IAAI,EAIvD,SAASE,EAAYC,EAAiB,CACpC,GAAI,CAACA,EAAS,CACZL,EAAa,MAAQ,GACrBG,EAAW,MAAQ,KACnBG,EAAK,cAAeD,CAAO,EAC3B,OAEE,GAAAE,EAAwBF,CAAO,EAAG,CACpCL,EAAa,MAAQ,GACrBG,EAAW,MAAQ,UACnBG,EAAK,cAAeD,CAAO,EAC3B,OAEFL,EAAa,MAAQ,sCACrBG,EAAW,MAAQ,OACrB,CAEA,OAAAK,EAAU,IAAM,CACVN,EAAM,QACRE,EAAYF,EAAM,MAAM,CAC1B,CACD;;;;;;;;","x_google_ignoreList":[0]}